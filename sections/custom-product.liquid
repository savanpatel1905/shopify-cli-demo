{% comment %}
  Customized main-product.liquid styled like Dawn, with AJAX Add to Cart and success message
{% endcomment %}

{% assign product_form_id = 'product-form-' | append: section.id %}

<section id="MainProduct-{{ section.id }}" class="product" itemscope itemtype="http://schema.org/Product">
  <div class="page-width">
    <div class="grid product__grid">
    
      <!-- Product Images -->
      <div class="grid__item product__media-wrapper">
        {% if product.featured_image %}
          <div class="product__media">
            <img src="{{ product.featured_image | img_url: '800x' }}" alt="{{ product.title }}" itemprop="image" class="product__media-img">
          </div>
        {% endif %}
      </div>

      <!-- Product Details -->
      <div class="grid__item product__info-wrapper">
        <div class="product__info">
          <h1 class="product__title" itemprop="name">{{ product.title }}</h1>

          <div class="product__price" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
            <meta itemprop="priceCurrency" content="{{ cart.currency.iso_code }}">
            <span class="price" itemprop="price">{{ product.price | money }}</span>
          </div>

          <div class="product__description rte" itemprop="description">
            {{ product.description }}
          </div>

          <!-- Add to Cart Form -->
   <form
  id="{{ product_form_id }}"
  class="product-form"
  method="post"
  novalidate
  onsubmit="return false;"
>
  <input type="hidden" name="id" value="{{ product.variants.first.id }}">
  
  <label for="Quantity-{{ section.id }}">Quantity:</label>
  <input type="number" id="Quantity-{{ section.id }}" name="quantity" min="1" value="1" required>

  <button type="submit" class="button button--primary">Add to Cart</button>
</form>

<div
  id="CartSuccessMessage"
  class="cart-success-message"
  role="status"
  aria-live="polite"
  style="display: none;"
>
  âœ… Item added successfully!
</div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .product__media-img {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    border: 1px solid #e1e1e1;
  }
.grid.product__grid {
    display: flex;
    gap: 88px;
}
.grid__item.product__media-wrapper {
    width: 50%;
}
.grid__item.product__info-wrapper {
    width: 50%;
}
  .product__title {
    font-size: 2rem;
    font-weight: 600;
    margin-bottom: 1rem;
  }

  .product__price {
    font-size: 1.5rem;
    color: #222;
    margin-bottom: 1rem;
  }

  .product__description {
    margin-bottom: 1.5rem;
    color: #555;
  }

  .product__quantity-label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
  }

  .product__quantity {
    width: 60px;
    padding: 0.5rem;
    margin-bottom: 1rem;
    border-radius: 4px;
    border: 1px solid #ccc;
  }

  .button {
    background-color: #000;
    color: #fff;
    padding: 12px 24px;
    border: none;
    cursor: pointer;
    border-radius: 4px;
    font-size: 1rem;
    transition: background-color 0.3s ease;
  }

  .button:hover {
    background-color: #333;
  }

  .cart-success-message {
    margin-top: 1rem;
    padding: 1rem;
    background-color: #e6ffe6;
    color: #007a1c;
    border-left: 4px solid #00a32a;
    font-weight: bold;
    font-size: 1rem;
    display: none;
  }

  @media screen and (max-width: 749px) {
    .grid.product__grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('{{ product_form_id }}');
    const successMessage = document.getElementById('CartSuccessMessage');

    if (!form || !successMessage) return;

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(form);

      try {
        const response = await fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Accept': 'application/json',
          },
          body: formData,
        });

        if (response.ok) {
          // Reset quantity (optional)
          form.querySelector('[name="quantity"]').value = 1;

          // Show success message
          successMessage.style.display = 'block';

          // Hide after 3 seconds
          setTimeout(() => {
            successMessage.style.display = 'none';
          }, 3000);
        } else {
          alert('Failed to add item.');
        }
      } catch (err) {
        console.error('AJAX error:', err);
        alert('Error adding to cart.');
      }
    });
  });
</script>


{% schema %}
{
  "name": "Main Product",
  "tag": "section",
  "class": "section",
  "settings": [],
  "presets": [
    {
      "name": "Product"
    }
  ]
}
{% endschema %}
